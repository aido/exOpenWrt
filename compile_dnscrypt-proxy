#!/bin/bash
#
# Build OpenWRT DNSCrypt-Proxy
#

# Setup Environment
mkdir -p ~/bin/openwrt-ENV
cd ~/bin/openwrt-ENV

git clone git://git.openwrt.org/openwrt.git
git clone git://git.openwrt.org/packages.git

cd openwrt
echo "src-git exopenwrt https://github.com/xoraxiom/exOpenWrt.git" > feeds.conf
echo "src-git libsodium https://github.com/jedisct1/libsodium.git" >> feeds.conf
./scripts/feeds update -a
./scripts/feeds install libsodium
./scripts/feeds install dnscrypt-proxy

# Prepare for Compile
make menuconfig

echo "Target System (Atheros AR7xxx/AR9xxx)  ---> (X) Atheros AR7xxx/AR9xxx"
echo "Target Profile (TP-LINK TL-WDR4300)  ---> (X) TP-LINK TL-WDR4300"

echo "Network  ---> IP Addresses and Names  --->"
echo "        <*> dnscrypt-proxy"
echo "        <*> hostip"

make -j4 tools/install
make -j4 toolchain/install

# Execute Compile
echo '>>>>> !!! COMPILING !!! <<<<<'
make V=s -j4 package/feeds/exopenwrt/dnscrypt-proxy/{clean,compile}

echo "...check ~/openwrt/bin for dnscrypt-proxy_***_ar71xx.ipk"

# Move to Router
# ...clean this up (better automation) if I end up doing this again...
echo -n '     Install to Router? (y/N): '
read INSROU
if [[ "$INSROU" == "Y" || "$INSROU" == "y" ]]; then
	#bash $pathto/install-router.sh $1
	scp ~/bin/openwrt-ENV/openwrt/bin/ar71xx/packages/dnscrypt-proxy_*.ipk root@192.168.1.1:/tmp/
	scp ~/bin/openwrt-ENV/openwrt/bin/ar71xx/packages/libsodium_*.ipk root@192.168.1.1:/tmp/
	echo "via ssh on the router do this:"
	echo "cd tmp; opkg install libsodium_*.ipk; opkg install dnscrypt-proxy_*.ipk"
	echo "/etc/init.d/dnscrypt-proxy enable"
	echo "/etc/init.d/dnscrypt-proxy start"
	
	ssh root@192.168.1.1
	echo "now SCP over the dhcp config file and copy it into /etc/config/dhcp"
	echo "/etc/init.d/dnsmasq restart"
	echo ''
	echo "Le Fin."
else
	echo 'Not installing to Router...'
fi

# Exit
exit 0


###/etc/config/dhcp
#config dnsmasq
	#option domainneeded	1
	#option boguspriv	1
	#option filterwin2k	0  # enable for dial on demand
	#option localise_queries	1
	#option rebind_protection 1  # disable if upstream must serve RFC1918 addresses
	#option rebind_localhost 1  # enable for RBL checking and similar services
	##list rebind_domain example.lan  # whitelist RFC1918 responses for domains
	#option local	'/lan/'
	#option domain	'lan'
	#option expandhosts	1
	#option nonegcache	0
	#option authoritative	1
	#option readethers	1
	#option leasefile	'/tmp/dhcp.leases'
##	option resolvfile	'/tmp/resolv.conf.auto'
	#option noresolv '1'
##	option logqueries '1'
	#list server '127.0.0.1#2053'
	#list server '/pool.ntp.org/208.67.222.222'
##	list server '208.67.222.222'
##	list server '208.67.220.220'
	##option nonwildcard	1
	##list interface		br-lan
	##list notinterface	lo
	##list bogusnxdomain     '64.94.110.11'

#config dhcp lan
	#option interface	lan
	#option start 	100
	#option limit	150
	#option leasetime	12h

#config dhcp wan
	#option interface	wan
	#option ignore	1
